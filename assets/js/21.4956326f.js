(window.webpackJsonp=window.webpackJsonp||[]).push([[21],{406:function(a,s,r){"use strict";r.r(s);var e=r(2),t=Object(e.a)({},(function(){var a=this,s=a._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[s("h3",{attrs:{id:"_1-push"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-push"}},[a._v("#")]),a._v(" 1.push()")]),a._v(" "),s("h4",{attrs:{id:"向数组的末尾添加一个或多个元素-并返回新数组的长度-改变原数组"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#向数组的末尾添加一个或多个元素-并返回新数组的长度-改变原数组"}},[a._v("#")]),a._v(" 向数组的末尾添加一个或多个元素，并返回新数组的长度(改变原数组)")]),a._v(" "),s("div",{staticClass:"language-# line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("let arr1 = [1,2,3]\nlet arr2 = arr1.push(4,5)\nconsole.log(arr1)  //  [1,2,3,4,5]\nconsole.log(arr2)  //  5\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br")])]),s("h3",{attrs:{id:"_2-unshift"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-unshift"}},[a._v("#")]),a._v(" 2.unshift()")]),a._v(" "),s("h4",{attrs:{id:"向数组的开头添加一个或多个元素-并返回新数组的长度-改变原数组"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#向数组的开头添加一个或多个元素-并返回新数组的长度-改变原数组"}},[a._v("#")]),a._v(" 向数组的开头添加一个或多个元素，并返回新数组的长度(改变原数组)")]),a._v(" "),s("div",{staticClass:"language-# line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("let arr1 = [1,2,3]\nlet arr2 = arr1.unshift(4,5)\nconsole.log(arr1)  //  [4,5,1,2,3]\nconsole.log(arr2)  //  5\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br")])]),s("h3",{attrs:{id:"_3-shift"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-shift"}},[a._v("#")]),a._v(" 3.shift()")]),a._v(" "),s("h4",{attrs:{id:"删除并返回数组第一个元素-返回被删除的元素-改变原数组"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#删除并返回数组第一个元素-返回被删除的元素-改变原数组"}},[a._v("#")]),a._v(" 删除并返回数组第一个元素，返回被删除的元素(改变原数组)")]),a._v(" "),s("div",{staticClass:"language-# line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("let arr1 = [1,2,3]\nlet arr2 = arr1.shift()\nconsole.log(arr1)  //  [2,3]\nconsole.log(arr2)  //  1\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br")])]),s("h3",{attrs:{id:"_4-pop"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-pop"}},[a._v("#")]),a._v(" 4.pop()")]),a._v(" "),s("h4",{attrs:{id:"删除并返回数组最后一个元素-返回被删除的元素-改变原数组"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#删除并返回数组最后一个元素-返回被删除的元素-改变原数组"}},[a._v("#")]),a._v(" 删除并返回数组最后一个元素，返回被删除的元素(改变原数组)")]),a._v(" "),s("div",{staticClass:"language-# line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("let arr1 = [1,2,3]\nlet arr2 = arr1.pop()\nconsole.log(arr1)  //  [1,2]\nconsole.log(arr2)  //  3\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br")])]),s("h3",{attrs:{id:"_5-join-value"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-join-value"}},[a._v("#")]),a._v(" 5.join(value)")]),a._v(" "),s("h4",{attrs:{id:"数组转字符串-默认为逗号分隔符-返回被连接后的字符串-不改变原数组"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#数组转字符串-默认为逗号分隔符-返回被连接后的字符串-不改变原数组"}},[a._v("#")]),a._v(" 数组转字符串，默认为逗号分隔符，返回被连接后的字符串(不改变原数组)")]),a._v(" "),s("div",{staticClass:"language-# line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("let arr1 = [1,2,3]\nlet arr2 = arr1.join()\nlet arr3 = arr1.join('-')\nconsole.log(arr1)   // [1,2,3]\nconsole.log(arr2)   //  1,2,3\nconsole.log(arr3)   //  1-2-3\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br"),s("span",{staticClass:"line-number"},[a._v("5")]),s("br"),s("span",{staticClass:"line-number"},[a._v("6")]),s("br")])]),s("h3",{attrs:{id:"_6-concat"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_6-concat"}},[a._v("#")]),a._v(" 6.concat()")]),a._v(" "),s("h4",{attrs:{id:"连接两个或多个数组-返回一个新的数组-不改变原数组"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#连接两个或多个数组-返回一个新的数组-不改变原数组"}},[a._v("#")]),a._v(" 连接两个或多个数组，返回一个新的数组(不改变原数组)")]),a._v(" "),s("div",{staticClass:"language-# line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("let arr1 = [1,2,3]\nlet arr2 = [4,5]\nlet arr3 =arr1.concat(arr2)\nconsole.log(arr3)   //  [1,2,3,4,5]\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br")])]),s("h3",{attrs:{id:"_7-sort"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_7-sort"}},[a._v("#")]),a._v(" 7.sort()")]),a._v(" "),s("h4",{attrs:{id:"对数组的元素进行排序-返回排序后的新数组-改变原数组"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#对数组的元素进行排序-返回排序后的新数组-改变原数组"}},[a._v("#")]),a._v(" 对数组的元素进行排序,返回排序后的新数组(改变原数组)")]),a._v(" "),s("h4",{attrs:{id:"默认按照数组元素第一位的-ascii-码从小到大排列-只限数组中是数字或者数字字符串"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#默认按照数组元素第一位的-ascii-码从小到大排列-只限数组中是数字或者数字字符串"}},[a._v("#")]),a._v(" 默认按照数组元素第一位的 ASCII 码从小到大排列，只限数组中是数字或者数字字符串")]),a._v(" "),s("div",{staticClass:"language-# line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("let arr = [1,7,2,6,3,5,4]\nlet brr = arr.sort()\nconsole.log(brr)   //  [1,2,3,4,5,6,7]\nlet crr = arr.sort((a,b) => a-b)\nconsole.log(crr)   //  [1,2,3,4,5,6,7]  升序\nlet drr = arr.sort((a,b) => b-a)\nconsole.log(drr)   //  [7,6,5,4,3,2,1]  降序\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br"),s("span",{staticClass:"line-number"},[a._v("5")]),s("br"),s("span",{staticClass:"line-number"},[a._v("6")]),s("br"),s("span",{staticClass:"line-number"},[a._v("7")]),s("br")])]),s("h3",{attrs:{id:"_8-reverse"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_8-reverse"}},[a._v("#")]),a._v(" 8.reverse()")]),a._v(" "),s("h4",{attrs:{id:"颠倒数组中元素的顺序-改变原数组"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#颠倒数组中元素的顺序-改变原数组"}},[a._v("#")]),a._v(" 颠倒数组中元素的顺序(改变原数组)")]),a._v(" "),s("div",{staticClass:"language-# line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("let arr = [1,2,3,4,5]\nlet brr = arr.reverse()\nconsole.log(brr)    //  [5,4,3,2,1]\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br")])]),s("h3",{attrs:{id:"_9-slice-start-end"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_9-slice-start-end"}},[a._v("#")]),a._v(" 9.slice(start,end)")]),a._v(" "),s("h4",{attrs:{id:"截取数组-不改变原数组"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#截取数组-不改变原数组"}},[a._v("#")]),a._v(" 截取数组(不改变原数组)")]),a._v(" "),s("h4",{attrs:{id:"slice-start-end-start-截取数组单元起始位置的索引-end-截取数组单元结束位置的索引"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#slice-start-end-start-截取数组单元起始位置的索引-end-截取数组单元结束位置的索引"}},[a._v("#")]),a._v(" slice(start,end) start:截取数组单元起始位置的索引 end:截取数组单元结束位置的索引")]),a._v(" "),s("div",{staticClass:"language-# line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("let arr = [1,2,3,4,5,6]\nconsole.log(arr.slice(1))      //  [2,3,4,5,6],只有一个参数且不小于0时，则从此索引开始截取到数组的末尾\nconsole.log(arr.slice(-1))     //  [6],只有一个参数且小于0时，则从倒数开始位截取到数组的末尾\nconsole.log(arr.slice(1,3))    //  [2,3],两个参数时，从开始下标截取到结束下标，不包含结束下标\nconsole.log(arr.slice(1,-1))   //  [2,3,4,5],从第一位截取到倒数第一位\nconsole.log(arr.slice(-2,-1))  //  [5]  倒数第2位截取到倒数第1位\nconsole.log(arr.slice(-1,1))   //  反向截取，不合法，返回空数组\nconsole.log(arr.slice(-1,-2))  //  反向截取，不合法，返回空数组\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br"),s("span",{staticClass:"line-number"},[a._v("5")]),s("br"),s("span",{staticClass:"line-number"},[a._v("6")]),s("br"),s("span",{staticClass:"line-number"},[a._v("7")]),s("br"),s("span",{staticClass:"line-number"},[a._v("8")]),s("br")])]),s("h3",{attrs:{id:"_10-splice-index-count-val1-val2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_10-splice-index-count-val1-val2"}},[a._v("#")]),a._v(" 10.splice(index,count,val1,val2...)")]),a._v(" "),s("h4",{attrs:{id:"删除-插入、更新-数组中的元素-改变原数组"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#删除-插入、更新-数组中的元素-改变原数组"}},[a._v("#")]),a._v(" 删除(插入、更新)数组中的元素(改变原数组)")]),a._v(" "),s("h4",{attrs:{id:"splice-index-count-val1-val2-index-索引-count-删除元素数量-val1-val2-插入的新元素"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#splice-index-count-val1-val2-index-索引-count-删除元素数量-val1-val2-插入的新元素"}},[a._v("#")]),a._v(" splice(index,count,val1,val2...) index:索引 count:删除元素数量,val1,val2...插入的新元素")]),a._v(" "),s("div",{staticClass:"language-# line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("let arr = [1,2,3,4,5,6]\nconsole.log(arr.splice(1,2,99)) //  [2,3] 从下标为1 删除2个元素 返回被删除的数组\nconsole.log(arr)                //  [1,99,4,5,6]   原数组1的位置被插入99这个元素\n\nlet arr = [1,2,3,4,5,6]\nconsole.log(arr.splice(0))      //  [1,2,3,4,5,6]  当参数为单个且不小于0时，将截取到数组末尾\nconsole.log(arr)                //  []\n\nlet arr = [1,2,3,4,5,6]\nconsole.log(arr.splice(-1))      // [6]            当参数为单个且小于0时，将从倒数开始位截取到数组的末尾\nconsole.log(arr)                 // [1,2,3,4,5]\n\nlet arr = [1,2,3,4,5,6]\nconsole.log(arr.splice(-1,2))      // [6]         从倒数-1开始位截取2个元素\nconsole.log(arr)                 // [1,2,3,4,5]\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br"),s("span",{staticClass:"line-number"},[a._v("5")]),s("br"),s("span",{staticClass:"line-number"},[a._v("6")]),s("br"),s("span",{staticClass:"line-number"},[a._v("7")]),s("br"),s("span",{staticClass:"line-number"},[a._v("8")]),s("br"),s("span",{staticClass:"line-number"},[a._v("9")]),s("br"),s("span",{staticClass:"line-number"},[a._v("10")]),s("br"),s("span",{staticClass:"line-number"},[a._v("11")]),s("br"),s("span",{staticClass:"line-number"},[a._v("12")]),s("br"),s("span",{staticClass:"line-number"},[a._v("13")]),s("br"),s("span",{staticClass:"line-number"},[a._v("14")]),s("br"),s("span",{staticClass:"line-number"},[a._v("15")]),s("br")])]),s("h3",{attrs:{id:"_11-tostring"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_11-tostring"}},[a._v("#")]),a._v(" 11.toString()")]),a._v(" "),s("h4",{attrs:{id:"将数组中的元素用逗号拼接成字符串-返回拼接后的字符串-不改变原数组"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#将数组中的元素用逗号拼接成字符串-返回拼接后的字符串-不改变原数组"}},[a._v("#")]),a._v(" 将数组中的元素用逗号拼接成字符串，返回拼接后的字符串(不改变原数组)")]),a._v(" "),s("div",{staticClass:"language-# line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("let arr = [1,2,3,4,5]\nconsole.log(arr.toString())   //  1,2,3,4,5\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br")])]),s("h3",{attrs:{id:"_12-indexof-value"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_12-indexof-value"}},[a._v("#")]),a._v(" 12.indexOf(value)")]),a._v(" "),s("h4",{attrs:{id:"从索引为-0-开始-检查数组中是否包含有-value-有则返回匹配到的第一个索引-没有则返回-1-不改变原数组"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#从索引为-0-开始-检查数组中是否包含有-value-有则返回匹配到的第一个索引-没有则返回-1-不改变原数组"}},[a._v("#")]),a._v(" 从索引为 0 开始，检查数组中是否包含有 value，有则返回匹配到的第一个索引，没有则返回-1(不改变原数组)")]),a._v(" "),s("div",{staticClass:"language-# line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("let arr = [1,2,3,4,3,5]\nconsole.log(arr.indexOf(3))     //  2   数组中有2个3，第一个3索引为2\nconsole.log(arr.indexOf(99))    //  -1  数组中没有99，返回-1\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br")])]),s("h3",{attrs:{id:"_13-lastindexof-value"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_13-lastindexof-value"}},[a._v("#")]),a._v(" 13.lastIndexOf(value)")]),a._v(" "),s("h4",{attrs:{id:"从最后的索引开始-检查数组中是否包含有-value-有则返回匹配到的第一个索引-没有则返回-1-不改变原数组"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#从最后的索引开始-检查数组中是否包含有-value-有则返回匹配到的第一个索引-没有则返回-1-不改变原数组"}},[a._v("#")]),a._v(" 从最后的索引开始，检查数组中是否包含有 value，有则返回匹配到的第一个索引，没有则返回-1(不改变原数组)")]),a._v(" "),s("div",{staticClass:"language-# line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("let arr = [1,2,3,4,3,5]\nconsole.log(arr.lastIndexOf(3))     //  4   从最后的索引反过来查找3，第一个3的下标为4\nconsole.log(arr.lastIndexOf(99))    //  -1  数组中没有99，返回-1\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br")])]),s("h3",{attrs:{id:"_14-foreach"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_14-foreach"}},[a._v("#")]),a._v(" 14.forEach()")]),a._v(" "),s("h4",{attrs:{id:"对数组循环遍历-没有返回值"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#对数组循环遍历-没有返回值"}},[a._v("#")]),a._v(" 对数组循环遍历，没有返回值")]),a._v(" "),s("div",{staticClass:"language-# line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("let arr = [0,1,2,3,4,5]\narr.forEach((item,index,array) => {\n    console.log(item)  //  当前值\n    console.log(index) // 当前下标\n    console.log(array) // 数组本身\n})\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br"),s("span",{staticClass:"line-number"},[a._v("5")]),s("br"),s("span",{staticClass:"line-number"},[a._v("6")]),s("br")])]),s("h3",{attrs:{id:"_15-map"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_15-map"}},[a._v("#")]),a._v(" 15.map()")]),a._v(" "),s("h4",{attrs:{id:"对数组中的每一项运行给定函数-返回每次函数调用的结果组成的新数组"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#对数组中的每一项运行给定函数-返回每次函数调用的结果组成的新数组"}},[a._v("#")]),a._v(" 对数组中的每一项运行给定函数，返回每次函数调用的结果组成的新数组")]),a._v(" "),s("div",{staticClass:"language-# line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("let arr = [1,2,3,4,5]\nlet brr = arr.map((item,index,a) => {\n   return item+1\n})\nconsole.log(brr)    //      [2,3,4,5,6]\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br"),s("span",{staticClass:"line-number"},[a._v("5")]),s("br")])]),s("h3",{attrs:{id:"_16-filter"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_16-filter"}},[a._v("#")]),a._v(" 16.filter()")]),a._v(" "),s("h4",{attrs:{id:"对数组中的每一项运行给定函数-返回每次函数调用的结果组成的新数组-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#对数组中的每一项运行给定函数-返回每次函数调用的结果组成的新数组-2"}},[a._v("#")]),a._v(" 对数组中的每一项运行给定函数，返回每次函数调用的结果组成的新数组")]),a._v(" "),s("div",{staticClass:"language-# line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("let arr = [1,2,3,4,5]\nlet brr =arr.filter((item,index,a) => {\n   return item%2===0\n})\nconsole.log(brr)    //      [2,4]\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br"),s("span",{staticClass:"line-number"},[a._v("5")]),s("br")])]),s("h3",{attrs:{id:"_17-every"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_17-every"}},[a._v("#")]),a._v(" 17.every()")]),a._v(" "),s("h4",{attrs:{id:"判断数组中每一项都是否满足条件-只有所有项都满足条件-才会返回true"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#判断数组中每一项都是否满足条件-只有所有项都满足条件-才会返回true"}},[a._v("#")]),a._v(" 判断数组中每一项都是否满足条件，只有所有项都满足条件，才会返回true")]),a._v(" "),s("div",{staticClass:"language-# line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("let arr = [6,7,8,9,10]\nlet isOver5 =arr.every((item,index,a) => {\n   return item > 5\n})\nconsole.log(isOver5)    //    true  \n\nlet arr = [6,7,8,9,1]\nlet isOver5 =arr.every((item,index,a) => {\n   return item > 5\n})\nconsole.log(isOver5)    //    false  \n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br"),s("span",{staticClass:"line-number"},[a._v("5")]),s("br"),s("span",{staticClass:"line-number"},[a._v("6")]),s("br"),s("span",{staticClass:"line-number"},[a._v("7")]),s("br"),s("span",{staticClass:"line-number"},[a._v("8")]),s("br"),s("span",{staticClass:"line-number"},[a._v("9")]),s("br"),s("span",{staticClass:"line-number"},[a._v("10")]),s("br"),s("span",{staticClass:"line-number"},[a._v("11")]),s("br")])]),s("h3",{attrs:{id:"_18-some"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_18-some"}},[a._v("#")]),a._v(" 18.some()")]),a._v(" "),s("h4",{attrs:{id:"判断数组中是否存在满足条件的项-只要有一项满足条件-就会返回true"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#判断数组中是否存在满足条件的项-只要有一项满足条件-就会返回true"}},[a._v("#")]),a._v(" 判断数组中是否存在满足条件的项，只要有一项满足条件，就会返回true")]),a._v(" "),s("div",{staticClass:"language-# line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("let arr = [1,2,3,4,6]\nlet isOver5 =arr.some((item,index,a) => {\n   return item > 5\n})\nconsole.log(isOver5)    //    true  \n\nlet arr = [1,2,3,4]\nlet isOver5 =arr.every((item,index,a) => {\n   return item > 5\n})\nconsole.log(isOver5)    //    false  \n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br"),s("span",{staticClass:"line-number"},[a._v("5")]),s("br"),s("span",{staticClass:"line-number"},[a._v("6")]),s("br"),s("span",{staticClass:"line-number"},[a._v("7")]),s("br"),s("span",{staticClass:"line-number"},[a._v("8")]),s("br"),s("span",{staticClass:"line-number"},[a._v("9")]),s("br"),s("span",{staticClass:"line-number"},[a._v("10")]),s("br"),s("span",{staticClass:"line-number"},[a._v("11")]),s("br")])]),s("h3",{attrs:{id:"_19-reduce-funciton-previousvalue-currentvalue-index-arr-initialvalue"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_19-reduce-funciton-previousvalue-currentvalue-index-arr-initialvalue"}},[a._v("#")]),a._v(" 19.reduce(funciton(previousValue,currentValue, index, arr),initialValue)")]),a._v(" "),s("h4",{attrs:{id:"接收一个函数作为累加器-数组中的每个值-从左到右-开始缩减-最终计算为一个值"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#接收一个函数作为累加器-数组中的每个值-从左到右-开始缩减-最终计算为一个值"}},[a._v("#")]),a._v(" 接收一个函数作为累加器，数组中的每个值（从左到右）开始缩减，最终计算为一个值")]),a._v(" "),s("h4",{attrs:{id:"如果initialvalue省略-则previousvalue和currentvalue分别为数组中的第一项元素和第二项元素"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#如果initialvalue省略-则previousvalue和currentvalue分别为数组中的第一项元素和第二项元素"}},[a._v("#")]),a._v(" 如果initialValue省略，则previousValue和currentValue分别为数组中的第一项元素和第二项元素；")]),a._v(" "),s("h4",{attrs:{id:"如果initialvalue存在-则previousvalue为initialvalue-而currentvalue为数组中的第一项"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#如果initialvalue存在-则previousvalue为initialvalue-而currentvalue为数组中的第一项"}},[a._v("#")]),a._v(" 如果initialValue存在，则previousValue为initialValue，而currentValue为数组中的第一项")]),a._v(" "),s("div",{staticClass:"language-# line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("let arr = [1,2,3,4,5]\nlet brr = arr.reduce((previousValue,currentValue) =>{\n    return previousValue + currentValue\n})\nconsole.log(brr)    //  15\nlet arr = [1,2,3,4,5]\nlet brr = arr.reduce((previousValue,currentValue) =>{\n    return previousValue + currentValue\n},100)\nconsole.log(brr)    //  115\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br"),s("span",{staticClass:"line-number"},[a._v("5")]),s("br"),s("span",{staticClass:"line-number"},[a._v("6")]),s("br"),s("span",{staticClass:"line-number"},[a._v("7")]),s("br"),s("span",{staticClass:"line-number"},[a._v("8")]),s("br"),s("span",{staticClass:"line-number"},[a._v("9")]),s("br"),s("span",{staticClass:"line-number"},[a._v("10")]),s("br")])]),s("h3",{attrs:{id:"总结下来会改变原数组的api如下"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#总结下来会改变原数组的api如下"}},[a._v("#")]),a._v(" 总结下来会改变原数组的API如下")]),a._v(" "),s("h4",{attrs:{id:"push-、unshift-、pop-、shift-、reverse-、splice-、sort"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#push-、unshift-、pop-、shift-、reverse-、splice-、sort"}},[a._v("#")]),a._v(" push()、unshift()、pop()、shift()、reverse()、splice()、sort()")]),a._v(" "),s("br"),a._v(" "),s("br"),a._v(" "),s("hr"),a._v(" "),s("br"),a._v(" "),s("br"),a._v(" "),s("Valine")],1)}),[],!1,null,null,null);s.default=t.exports}}]);